#include <string>
#include <iostream>
#include <vector>
#include <queue>
#include <stdint.h>
#include <QDebug>
#include <bitset>
#include "crc.h"




int main()
{
    

     data2 = {
        0x00,
        0x01,  //константа
        0x62,
        0x00,   //размер блока
        0x00,
        0x01,   //константа
        0x5A,
        0x00,   //размер всего блока
        0x53,
        0x00,
        0x00,
        0x00,
        0xE9,
        0x00,   //константы
        0x32,
        0x00,   //размер сжатых данных
        0x5F,
        0x4B,
        0x49,
        0x30,
        0x30,
        0x31,
        0x31,
        0x31,
        0x2E,
        0xFF,
        0xFF,
        0xFF,     //имя файла
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x01,
        0x00,
        0x01,
        0x00,      //константы
        0x03,
        0x00,
        0x32,
        0x00,      //размер сжатых данных
        0x1F,
        0x8B,
        0x08,
        0x08,
        0xD6,
        0xD6,
        0x1F,
        0x3F,
        0x00,
        0x03,
        0x74,
        0x65,
        0x6D,
        0x70,
        0x66,
        0x69,
        0x6C,
        0x65,
        0x00,
        0xE3,
        0xE5,
        0xD2,
        0x05,
        0x01,
        0xDE,
        0xFF,
        0xD8,
        0x01,
        0x2F,
        0x17,
        0x2F,
        0x17,
        0x0E,
        0x29,
        0x62,
        0xC0,
        0xA8,
        0x66,
        0xFA,
        0x6A,
        0x06,
        0x00,
        0x88,
        0x7F,
        0x66,
        0x02,
        0xCE,
        0x01,
        0x00,
        0x00,   //сжатые данные gzip
        //CRC
        0x9F,
        0xF0,
        0xCD,
        0x7B,           };

   // std::vector<uint8_t> byte_vec = {0x01, 0xFA, 0x76, 0x73, 0x6D};
            //fromFileUC("dec_bytes4.bin");
    std::cout << "CRC vector size:" << data2.size() << std::endl;
            //conv.toSymbol(inputDataBits, 8);
    crc crc32;
//    crc32.inverse_crc_bit_quads(byte_vec.data(),byte_vec.size(), 32);


    crc32.searchCRC(data2.data(), data2.size(),32);
  }

   
